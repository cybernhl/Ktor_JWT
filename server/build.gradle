

import org.gradle.util.internal.VersionNumber

buildscript {
    ext {
        agp_gradle = '8.1.0'
        android_gradle_plugin_version = agp_gradle
        kotlin_version = "1.8.22"
        // coroutine
        coroutine_version = "1.7.1"
        kotlin_coroutines_version = coroutine_version
        //kotlinx_serialization
        kotlinx_serialization_version = "1.4.1"
        //ktor
        kotlin_ktor_version = "2.3.2"//1.6.2
        ktor_version= kotlin_ktor_version
        kotlin_swagger_codegen_version = "1.0.36"
        swagger_codegen_version=kotlin_swagger_codegen_version
        ktx_extensions_version = '2.2.0'
        //AndroidX
        appcompat = "1.4.0"//1.4.0
        appcompat_version = appcompat
        material = "1.6.0"
//1.4.0 //1.7.0 get Can't determine type for tag '<macro name="m3_comp_bottom_app_bar_container_color">?attr/colorSurface</macro> https://stackoverflow.com/questions/74191324/cant-determine-type-for-tag-macro-name-m3-comp-bottom-app-bar-container-colo
        material_version = material
        cardview_version = "1.0.0"
        constraintLayout = "2.1.4"
        constraintlayout_version = constraintLayout
        navigation_version = "2.5.2"
        // 2.3.5 <-->androidx.navigation.safeargs    2.4.1<--> androidx.navigation.safeargs.kotlin
        ktx_version = "1.7.0"
        jetpack_windowmanager_version = '1.0.0'
        jetpack_camera_version = '1.1.0'
        camerax_version = jetpack_camera_version
        // activiy ktx
        activity_ktx_version = "1.4.0"
        fragment_version = "1.4.1"//1.3.6 1.4.0 1.4.1
        fragment_ktx_version = fragment_version
        lifecycle_version = "2.4.0"
        //DB : Room
        room_version = "2.3.0"
        //AndroidX New UI compose
        compose_version = '1.1.1'
        //Google Service
        google_services_plugin_version = "4.3.15"
        google_services_version = "18.1.0"
        //DI
        // dagger hilt
        dagger_hilt_version = "2.44.2"
        dagger_hilt_viewmodel_version = "1.0.0-alpha03"
        // koin
        koin_version = "3.4.1"//2.2.2

        gson_version = "2.10.1"

        // http
        retrofit_version = "2.9.0"
        okhttp_version = '4.10.0'
        okhttp_interceptor_version = okhttp_version
        okhttp_logging_version = "4.10.0"

        //glide
        glide_version = '4.12.0'
        // timber
        timber_version = '5.0.1'
        // utilcode & utilcodex
        utilcode_version = '1.30.7'
        utilcodex_version = '1.31.0'

        ////airbnb
        //epoxy
        epoxy_version = '4.6.4'
        ////mavericks
        mavericks_version = '2.7.0'
        ////Square
        //DB: sqldelight
        sqlDelight_version = '2.0.0'//1.5.5

        //kmongo
        kmongo_version = '4.8.0'
        //lombok
        lombok_version = '6.5.1'
        logback_version = '1.2.11'

        compileSdkVersion = 33
        compileSdk = compileSdkVersion
        targetSdkVersion = compileSdk
        targetSdk = targetSdkVersion
        minSdkVersion = 21
        minSdk = minSdkVersion
    }
    repositories {
        gradlePluginPortal()
        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = uri('https://maven.pkg.jetbrains.space/public/p/compose/dev')
        }
        maven {
            url "https://raw.githubusercontent.com/cybernhl/maven-repository/master/"
        }

        maven {
            url = uri('https://jitpack.io')
        }
        maven {
            url = uri('https://s3.amazonaws.com/repo.commonsware.com')
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_gradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
//        classpath "com.squareup.sqldelight:gradle-plugin:$sqlDelight_version"
        classpath "app.cash.sqldelight:gradle-plugin:$sqlDelight_version"
        classpath "io.ktor.plugin:plugin:$kotlin_ktor_version"
        classpath "org.jetbrains.compose:compose-gradle-plugin:1.4.3"

        classpath "dev.icerock.moko:resources-generator:0.23.0"
    }
}

allprojects {
    repositories {
        gradlePluginPortal()
        maven {
            url "https://raw.githubusercontent.com/cybernhl/maven-repository/master/"
        }
        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = uri('https://maven.pkg.jetbrains.space/public/p/compose/dev')
        }
        maven {
            url = uri('https://jitpack.io')
        }
        maven {
            url = uri('https://s3.amazonaws.com/repo.commonsware.com')
        }
    }

    //https://www.baeldung.com/java-comparing-versions
//    println "Show  current define room version  : ${room_version}"
    def room_version = VersionNumber.parse(room_version)
    def target_room_version = VersionNumber.parse("2.4.0-alpha03")
//    println "Show  current define room ver  : ${room_version.minor}"
//    println "Show  target_room_version  : ${target_room_version.minor}"
//    println "Show  compareTo  : ${room_version.compareTo(target_room_version)}"
    if (room_version.compareTo(target_room_version) < 0) {
        configurations.all {
            resolutionStrategy {
                force 'org.xerial:sqlite-jdbc:3.34.0'
            }
        }
    }
}

//subprojects {sub->
//    sub.afterEvaluate {
//        if (sub.plugins.hasPlugin("com.android.application") || sub.plugins.hasPlugin("java")){
//            dependencies {
//                implementation project(path: ':shared')
//            }
//        }
//    }
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}
