apply plugin: 'application'
apply plugin: "org.jetbrains.kotlin.jvm"//kotlin("jvm")
apply plugin: "org.jetbrains.kotlin.plugin.serialization"//id "org.jetbrains.kotlin.plugin.serialization"
apply plugin: "io.ktor.plugin"//id("io.ktor.plugin")

application {
    mainClass = 'io.ktor.server.netty.EngineMain'
}

dependencies {
    implementation project(path: ':entity')
    implementation project(path: ':db')
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "io.ktor:ktor-client-content-negotiation:$ktor_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-swagger:$ktor_version"
    implementation "io.ktor:ktor-server-openapi:$ktor_version"
    implementation "io.ktor:ktor-server-cors:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    //JWT
    implementation "io.ktor:ktor-server-auth:$ktor_version"
    implementation "io.ktor:ktor-server-auth-jwt:$ktor_version"

    implementation "io.ktor:ktor-server-config-yaml:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"

    implementation "io.swagger.codegen.v3:swagger-codegen-generators:$swagger_codegen_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
}

